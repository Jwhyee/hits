name: Deploy to EC2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # 1. GitHub 저장소 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. JDK 설치 및 Gradle 빌드
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 3. Docker Hub 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 4. Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/your-image-name:latest .

      # 5. Docker Hub에 이미지 푸시
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/your-image-name:latest

      # 6. EC2 인스턴스 접속 준비 (SSH agent 세팅)
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # 7. EC2에 접속하여 deploy.sh 실행 (Docker pull & run 포함되어야 함)
      - name: Deploy to EC2
        run: ssh -v -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} './deploy.sh'